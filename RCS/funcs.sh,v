head	1.1;
access;
symbols;
locks
	kylealmryde:1.1; strict;
comment	@# @;


1.1
date	2011.07.28.19.16.12;	author kylealmryde;	state Exp;
branches;
next	;


desc
@Currently I have the value i passed to the variable subj/run, instead, I think I am going to try removing the eval command, and use a value like s or something that can be passed to the actual variable in subj in the tap_profile
@


1.1
log
@Initial revision
@
text
@# This is a function profile. It contains a number of functions that I can call with my scripts
# These functions are meant to make semi regular processes easier to use and access.

echo "Functions have been sourced"

# This cats a list of subjects (sourced from one of the experiment profiles) which is fed into a
# for loop, echoed, then evaluated to read in the next value

function subj_func ()
{
for i in `cat ${SUBJECTS}`;do
	eval subj=$i
	echo "$subj"
done;
}

# This cats a list of runs (sourced from one of the experiment profiles) which is fed into a
# for loop, echoed, then re-evaluated to read in the next value

function run_func ()
{
for i in `cat ${RUNS}`;do
	eval run=$i
	echo "$run"
done;
}

#I want to read an outlier file output by afni's 3doutcount, and pull a base value based on
#the current outliers. This would establish a dynamic process that would evaluate each file.
# base_func()
# { grep [!'cat ${outlier}]

function test_func ()
{
for i in ls df
do
    eval myvar="$i"
    echo "$myvar"
done
}@
