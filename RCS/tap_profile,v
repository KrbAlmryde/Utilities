head	1.3;
access;
symbols;
locks
	kylealmryde:1.3; strict;
comment	@# @;


1.3
date	2011.09.29.01.57.42;	author kylealmryde;	state Exp;
branches;
next	1.2;

1.2
date	2011.07.27.00.16.51;	author kylealmryde;	state Exp;
branches;
next	1.1;

1.1
date	2011.07.26.19.36.41;	author kylealmryde;	state Exp;
branches;
next	;


desc
@I changed the subject variable to see if implementing it Dianne's way might be better. We shall see...
@


1.3
log
@This concerns Line 76, save these values to be run at another time
in case I need to go back and look at them with tom anyway
@
text
@####################################################################################################
#
# This list specifies variables specifc to the TAP study
####################################################################################################
#
####################################################################################################
# Sourcing the exp_profile so our variables get passed to the shell properly
. $UTL/exp_profile
####################################################################################################
echo "------------------------tap_profile has been sourced------------------------"
####################################################################################################
#
# These are path variables that will be specified in the individual program scripts

home_dir=${TAP}
anova_dir=${TAP}/ANOVA/${run}
fsl_dir=${TAP}/FSL/${run}
subj_dir=${TAP}/${subj}
orig_dir=${subj_dir}/Orig
anat_dir=${subj_dir}/struc
run_dir=${TAP}/${subj}/${run}
####################################################################################################
#
# Names for files. Naming hierachy should follow this pattern: subj, run, mod, cond, brik
# Indentation is for readability

subrun=${subj}_${run}
submod=${subj}_${run}_${mod}
subcond=${subj}_${run}_${mod}_${cond}
subbrik=${subj}_${run}_${mod}_${cond}_${brik}
		runmod=${run}_${mod}
		runcond=${run}_${mod}_${cond}
				modcond=${mod}_${cond}
				modbrik=${mod}_${cond}_${brik}
spgr=${subj}_spgr
fse=${subj}_fse
#base=`base_reg`
####################################################################################################
#
# FSE Preprocessing parameters

nfs=154 #number of functional scans
nas=26 #number of anatomical slices
tr=3500 #the TR
thick=5 #Z-slice thickness
z1=I #Slice acquisition direction
fov=240 #field of view
####################################################################################################
#
# For calculating xyz sizes for functional and structural (fse) reconstruction in to3d
# Calculate the zslab value ((nas-1)* thick)/2), yFOV

x=`expr ${nas} - 1`
y=`echo "scale=2; ${x} * ${thick}"| bc`
z=`echo "scale=2; ${y}/2"| bc`
halffov=`echo "scale=2; ${fov}/2"| bc`
####################################################################################################
#
# Spgr Preprocessing parameters

nasspgr=164 #number of anatomical slices
thickspgr=1 #Z-slice thickness
z1spgr=L #Slice acquisition direction
fovspgr=256 #field of view for spgr
####################################################################################################
#
# For calculating xyz sizes for structural reconstruction in to3d
# Calculate the zslab value ((nas-1)* thick)/2), yFOV
# I had to include spgr variables because the tap study uses different parameters for that scan

xspgr=`expr ${nasspgr} - 1`
yspgr=`echo "scale=2; ${xspgr} * ${thickspgr}"| bc`
zspgr=`echo "scale=2; ${yspgr}/2"| bc`
anatfov=`echo "scale=2; ${fovspgr}/2"| bc`
####################################################################################################
# Deconvolution Hemodynamic Response Model specific variables
#

if [ "${hrm}" = "WAV" ]; then
	mod=WAV
elif [ "${hrm}" = "GAM" ]; then
	mod=GAM
elif [ "${hrm}" = "GAM(3.2,0.547)" ]; then
	mod=GAM1
elif [ "${hrm}" = "GAM(6.4,0.547)" ]; then
	mod=GAM2
elif [ "${hrm}" = "GAM(9.6,0.547)" ]; then
	mod=GAM3
elif [ "${hrm}" = "GAM(12.8,0.547)" ]; then
	mod=GAM4
elif [ "${hrm}" = "GAM(16,0.547)" ]; then
	mod=GAM5
elif [ "${hrm}" = "GAM(19.2,0.547)" ]; then
	mod=GAM6
elif [ "${hrm}" = "GAM(22.39,0.547)" ]; then
	mod=GAM7
elif [ "${hrm}" = "GAM(25.59,0.547)" ]; then
	mod=GAM8
elif [ "${hrm}" = "GAM(28.79,0.547)" ]; then
	mod=GAM9
elif [ "${hrm}" = "GAM(31.99,0.547)" ]; then
	mod=GAM10
fi
####################################################################################################
# Condition name decision maker
#

if [ "${run}" = "SP1" ]; then
	cond1=animal
	cond2=food
	cond3=null
elif [ "${run}" = "TP1" ]; then
	cond1=old
	cond2=new
	cond3=null
else
	cond1=male
	cond2=female
	cond3=null
fi
####################################################################################################
# ANOVA specific variables
#

if [ "${run}" = "SP1" ]; then
	factor=Semantic
elif [ "${run}" = "TP1" ]; then
	factor=Familiarity
elif [ "${run}" = "SP2" ]; then
	factor=Voice
else
	factor=Recollection
fi
####################################################################################################
@


1.2
log
@I will give this a try another time, I am forgoing this set up in favor of a function getup that can be sourced.
@
text
@d1 134
a134 23
#!/bin/sh
#define path variables that can be called by my scripts
echo "tap_profile has been activated"
UTL=/usr/local/utilities
TAP=/Volumes/Data/TAP
SUBJECTDIR=`pwd`
SUBJECT=`basename $SUBJECTECTDIR`
RUN1=${SUBJECT}/SP1
RUN2=${SUBJECT}/SP2
RUN3=${SUBJECT}/TP1
RUN4=${SUBJECT}/TP2
func=${SUBJECT}/${run}
anat=${SUBJECT}/struc

# Names
name=${func}/${SUBJECT}_${run}
spgr=${anat}/${SUBJECT}_spgr

# Preprocessing parameters
tr=3500
te=154
slice=26
base=15@


1.1
log
@Initial revision
@
text
@d4 2
d7 7
a13 4
subj=`basename $SUBJECTDIR`
RUNS=${UTL}/lst_run_tap.txt
func=${TAP}/${subj}/${run}
anat=${TAP}/${subj}/struc
d15 3
a17 4
# Name files
name=${func}/${subj}_${run}
spgr=${anat}/${subj}_spgr
base=15
d19 1
a19 2

#prep files?
d22 2
a23 1
slice=26@
