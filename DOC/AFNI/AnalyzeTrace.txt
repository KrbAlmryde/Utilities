
Usage: A program to analyze SUMA (and AFNI's perhaps) stack output
       The program can detect functions that return with RETURN without
       bothering to go on the stack.
   AnaylzeTrace [options] FILE 
       where FILE is obtained by redirecting program's trace output.
Optional Param:
   -max_func_lines N: Set the maximum number of code lines before a function
                      returns. Default is no limit.
   -suma_c: FILE is a SUMA_*.c file. It is analyzed for functions 
            that use SUMA_ RETURN 
            (typo on purpose to avoid being caught here) without ENTRY
       Note: The file for this program has special strings 
            (in comments at times)
            to avoid false alarms when processing it.
            
   -max_err MAX_ERR: Stop after encountering MAX_ERR errors
                     reported in log. Default is 5.
                     Error key terms are:
                     'Error', 'error', 'corruption'

   [-novolreg|-noxform]: Ignore any Rotate, Volreg, Tagalign, 
                or WarpDrive transformations present in 
                the Surface Volume.
  Common Debugging Options:
   [-trace]: Turns on In/Out debug and Memory tracing.
             For speeding up the tracing log, I recommend 
             you redirect stdout to a file when using this option.
             For example, if you were running suma you would use:
             suma -spec lh.spec -sv ... > TraceFile
             This option replaces the old -iodbg and -memdbg.
   [-TRACE]: Turns on extreme tracing.
   [-nomall]: Turn off memory tracing.
   [-yesmall]: Turn on memory tracing (default).
  NOTE: For programs that output results to stdout
    (that is to your shell/screen), the debugging info
    might get mixed up with your results.
 

++ SUMA version 2006_7_3

CVS tag:
   SUMA_2005_04_29_1733

Compile Date:
   Jul  5 2011

       Ziad S. Saad SSCC/NIMH/NIH saadz@mail.nih.gov     
