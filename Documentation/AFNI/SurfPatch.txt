
Usage:
  SurfPatch <-spec SpecFile> <-surf_A insurf> <-surf_B insurf> ...
            <-input nodefile inode ilabel> <-prefix outpref>  
            [-hits min_hits] [-masklabel msk] [-vol] [-patch2surf]
            [-vol_only] [-coord_gain] [-check_bowtie] [-fix_bowtie] 
            [-ok_bowtie] [-adjust_contour] [-do-not-adjust_contour] 
            [-stiched_surface SURF]   

Usage 1:
  The program creates a patch of surface formed by nodes 
  in nodefile.
  The program can also be used to calculate the volume between the same patch
  on two isotopic surfaces. See -vol option below.

     -spec SpecFile: Spec file containing input surfaces.
     -surf_X: Name of input surface X where X is a character
              from A to Z. If surfaces are specified using two
              files, use the name of the node coordinate file.
     -input nodefile inode ilabel: 
            nodefile is the file containing nodes defining the patch.
            inode is the index of the column containing the nodes
            ilabel is the index of the column containing labels of
                   the nodes in column inode. If you want to use
                   all the nodes in column indode, then set this 
                   parameter to -1 (default). 
                   If ilabel is not equal to 0 then the corresponding 
                   node is used in creating the patch.
                   See -masklabel option for one more variant.
     -prefix outpref: Prefix of output patch. If more than one surface
                      are entered, then the prefix will have _X added
                      to it, where X is a character from A to Z.
                      Output format depends on the input surface's.
                      With that setting, checking on pre-existing files
                      is only done before writing the new patch, which is
                      annoying. You can set the output type ahead of time
                      using -out_type option. This way checking for 
                      pre-existing output files can be done at the outset.
     -vol: Calculate the volume formed by the patch on surf_A and
            and surf_B. For this option, you must specify two and
            only two surfaces with surf_A and surf_B options.
     -vol_only: Only calculate the volume, don't write out patches.
                See also -fix_bowtie option below.

  ** If you are more interested in the volume attributed to one node, or a 
     set of nodes, between two isotopic surfaces, you are much better off 
     using SurfMeasures' -node_volg option. SurfMeasures has an efficient 
     implementation of the Gauss Theorem based volume estimation.

     -out_type TYPE: Type of all output patches, regardless of input 
                     surface type.
                     Choose from: FreeSurfer, SureFit, 1D and Ply.
     -hits min_hits: Minimum number of nodes specified for a triangle
                     to be made a part of the patch (1 <= min_hits <= 3)
                     default is 2.
     -masklabel msk: If specified, then only nodes that are labeled with
                     with msk are considered for the patch.
                     This option is useful if you have an ROI dataset file
                     and whish to create a patch from one out of many ROIs
                     in that file. This option must be used with ilabel 
                     specified (not = -1)
     -patch2surf: Turn surface patch into a surface where only nodes used in
                  forming the mesh are preserved.
     -check_bowtie: Check if the patch has a section hanging by one node to
                    the rest of the mesh. Think of a patch made of two 
                    triangles that are connected at one node only. 
                    Think Bowtie. Bowties should not occur if original 
                    surface is 2 manifold and min_hits == 1
                    -check_bowtie is the default when -vol or -vol_only 
                    are used. Volume computation will fail in the presence
                    of bowties.
     -fix_bowtie: Modify patch to eliminate bowties. This only works if 
                  min_hits is > 1. The repair is done by relaxing min_hits
                  at the node(s) where the bowtie happens.
     -ok_bowtie: Do not check for, or fix bowties. 
                 Default when -vol* are not used.
     -adjust_contour: Once the patch is created, shrink its contours at nodes
                      that were not in nodefile (non-selected).
                      Each non-selected node is moved to the center of mass
                      of itself and neighboring selected nodes.
                      This adjustment might make sense when min_hits < 3
                      
     -do-not-adjust_contour:  Do not adjust contrours.
                              This is the default.
     -stiched_surface STICHED: Write out the stiched surface used to
                               calculate the volume. 
                               If -adjust_contour is used, this option also
                               writes out a file that shows which 
                               nodes on the original surface were adjusted.
                               The first column in the node number. The 2nd
                               contains the number of selected nodes that 
                               neighbored non-selected nodes in the patch.
     -coord_gain GAIN: Multiply node coordinates by a GAIN.
                       That's useful if you have a tiny patch that needs
                       enlargement for easier viewing in SUMA.
                       Although you can zoon over very large ranges in SUMA
                       tiny tiny patches are hard to work with because
                       SUMA's parameters are optimized to work with objects
                       on the order of a brain, not on the order of 1 mm.
                       Gain is applied just before writing out patches.
     -flip_orientation: Change orientation of triangles before writing
                        surfaces.
     -verb VERB: Set verbosity level, 1 is the default.

   Example 1: Given an ROI, a white matter and a gray matter surface
              calculate the volume of cortex enclosed by the roi on
              both surfaces.
              Assume you have the spec file and surfaces already. You can
              get the same files from the SUMA directory in the AFNI 
              workshop SUMA's archive which you can get with: 
         curl -O http://afni.nimh.nih.gov/pub/dist/edu/data/SUMA_demo.tgz

              Draw an ROI on the surface and save it as: lh.manualroi.1D.roi

         To calculate the volume and create a enclosing surface:
             SurfPatch   -spec DemoSubj_lh.spec \
                         -sv DemoSubj_SurfVol+orig  \
                         -surf_A lh.smoothwm  \
                         -surf_B lh.pial   \
                         -prefix lh.patch \
                         -input lh.manualroi.1D.roi 0 -1  \
                         -out_type fs   \
                         -vol  \
                         -adjust_contour \
                         -stiched_surface lh.stiched   \
                         -flip_orientation 

   Example 2: If you want to voxelize the region between the two surfaces
              you can run the following on the output.
                 3dSurfMask -i lh.stiched.ply \
                            -prefix lh.closed -fill_method SLOW \
                            -grid_parent DemoSubj_SurfVol+orig.HEAD 
              3dSurfMask will output a dataset called lh.closed.d+orig which
              contains the signed closest distance from each voxel to the 
              surface. Negative distances are outside the surface.

              To examine the results:
                 suma -npb 71 -i lh.stiched.ply -sv DemoSubj_SurfVol+orig. &
                 afni -npb 71 -niml -yesplugouts & 
                 DriveSuma -npb 71 -com viewer_cont -key 't' 
                 plugout_drive  -npb 71  \
                                -com 'SET_OVERLAY lh.closed.d' \
                                -com 'SET_FUNC_RANGE A.3' \
                                -com 'SET_PBAR_NUMBER A.10' \
                                -com 'SET_DICOM_XYZ A. 10 70 22 '\
                                -quit

   [-novolreg|-noxform]: Ignore any Rotate, Volreg, Tagalign, 
                or WarpDrive transformations present in 
                the Surface Volume.
  Common Debugging Options:
   [-trace]: Turns on In/Out debug and Memory tracing.
             For speeding up the tracing log, I recommend 
             you redirect stdout to a file when using this option.
             For example, if you were running suma you would use:
             suma -spec lh.spec -sv ... > TraceFile
             This option replaces the old -iodbg and -memdbg.
   [-TRACE]: Turns on extreme tracing.
   [-nomall]: Turn off memory tracing.
   [-yesmall]: Turn on memory tracing (default).
  NOTE: For programs that output results to stdout
    (that is to your shell/screen), the debugging info
    might get mixed up with your results.
 

++ SUMA version 2006_7_3

CVS tag:
   SUMA_2005_04_29_1733

Compile Date:
   Jul  5 2011

       Ziad S. Saad SSCC/NIMH/NIH saadz@mail.nih.gov     
