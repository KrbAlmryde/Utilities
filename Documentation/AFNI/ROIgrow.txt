
Usage: ROIgrow <-i_TYPE SURF> <-roi_nodes ROI.1D> <-lim LIM>
               [-prefix PREFIX]
       A program to expand an ROI on the surface.
       The roi is grown from each node by a user-determined
       distance (geodesic, measured along the mesh).

  Mandatory Parameters:
     -i_TYPE SURF: Specify input surface.
             You can also use -t* and -spec and -surf
             methods to input surfaces. See below
             for more details.
     -roi_labels ROI_LABELS: Data column containing
                             integer labels of ROIs.
                             Each integer label gets
                             grown separately.
                             If ROI_LABELS is in niml
                             format, then you need not
                             use -roi_nodes because node 
                             indices are stored with the 
                             labels.
        Notice: With this option, an output is created for
                each label. The output contains two columns:
                One with node indices and one with the label.
                When this option is not used, you get one
                column out containing node indices only.
     -full_list: Output a row for each node on the surface.
                 Nodes not in the grown ROI, receive a 0 for
                 a label. This option is ONLY for use with
                 -roi_labels. This way you can combine 
                 multiple grown ROIs with, say, 3dcalc.
                 For such operations, you are better off 
                 using powers of 2 for integer labels.
     -roi_nodes ROI_INDICES: Data column containing
                     node indices of ROI. 
                     Use the [] column
                     specifier if you have more than
                     one column in the data file.
                     To get node indices from a niml dset
                     use the '[i]' selector.
     -grow_from_edge: Grow ROIs from their edges rather than
                      the brute force default. This might 
                      make the program faster on large ROIs  
                      and large surfaces.
     -lim LIM: Distance to cover from each node.
               The units of LIM are those of the surface's
               node coordinates. Distances are calculated
               along the surface's mesh.
  Optional Parameters:
     -prefix PREFIX: Prefix of 1D output dataset.
                     Default is ROIgrow
 
 Specifying input surfaces using -i or -i_TYPE options: 
    -i_TYPE inSurf specifies the input surface,
            TYPE is one of the following:
       fs: FreeSurfer surface. 
           If surface name has .asc it is assumed to be
           in ASCII format. Otherwise it is assumed to be
           in BINARY_BE (Big Endian) format.
           Patches in Binary format cannot be read at the moment.
       sf: SureFit surface. 
           You must specify the .coord followed by the .topo file.
       vec (or 1D): Simple ascii matrix format. 
            You must specify the coord (NodeList) file followed by 
            the topo (FaceSetList) file.
            coord contains 3 floats per line, representing 
            X Y Z vertex coordinates.
            topo contains 3 ints per line, representing 
            v1 v2 v3 triangle vertices.
       ply: PLY format, ascii or binary.
            Only vertex and triangulation info is preserved.
       mni: MNI .obj format, ascii only.
            Only vertex, triangulation, and node normals info is preserved.
       byu: BYU format, ascii.
            Polygons with more than 3 edges are turned into
            triangles.
       bv: BrainVoyager format. 
           Only vertex and triangulation info is preserved.
       dx: OpenDX ascii mesh format.
           Only vertex and triangulation info is preserved.
           Requires presence of 3 objects, the one of class 
           'field' should contain 2 components 'positions'
           and 'connections' that point to the two objects
           containing node coordinates and topology, respectively.
       gii: GIFTI XML surface format.
 Note that if the surface filename has the proper extension, 
 it is enough to use the -i option and let the programs guess
 the type from the extension.
   [-novolreg|-noxform]: Ignore any Rotate, Volreg, Tagalign, 
                or WarpDrive transformations present in 
                the Surface Volume.
  Common Debugging Options:
   [-trace]: Turns on In/Out debug and Memory tracing.
             For speeding up the tracing log, I recommend 
             you redirect stdout to a file when using this option.
             For example, if you were running suma you would use:
             suma -spec lh.spec -sv ... > TraceFile
             This option replaces the old -iodbg and -memdbg.
   [-TRACE]: Turns on extreme tracing.
   [-nomall]: Turn off memory tracing.
   [-yesmall]: Turn on memory tracing (default).
  NOTE: For programs that output results to stdout
    (that is to your shell/screen), the debugging info
    might get mixed up with your results.
 

++ SUMA version 2006_7_3

CVS tag:
   SUMA_2005_04_29_1733

Compile Date:
   Jul  5 2011

       Ziad S. Saad SSCC/NIMH/NIH saadz@mail.nih.gov     
