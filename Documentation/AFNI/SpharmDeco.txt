
Spherical Harmonics Decomposition of a surface's coordinates or data
Model:
Given a data vector 'd' defined over the domain of N nodes of surface 'S'
The weighted spherical harmonics representation of d (termed Sd) is given by:
            L    l  -l(l+1)s                         
    Sd = SUM  SUM  e         B     Y                 
          l=0 m=-l            l,m   l,m              
 where
 L: Largest degree of spherical harmonics
 Y    : Sperical harmonic of degree l and order m
  l,m
        Y is an (L+1 by N) complex matrix.
 B    : Coefficient associated with harmonic Y    
  l,m                                         l,m 
 s: Smoothing parameter ranging between 0 for no smoothing
    and 0.1 for the extreme smoothing. The larger s, the higher
    the attenuation of higher degree harmonics. 
    Small values of s (0.005) can be used to reduce Gibbs ringing artifacts.


Usage:
       SpharmDeco  <-i_TYPE S> -unit_sph UNIT_SPH_LABEL> <-l L>
                   [<-i_TYPE SD> ... | <-data D>] 
                   [-bases_prefix BASES] 
                   [<-prefix PREFIX>] [<-o_TYPE SDR> ...]
                   [-debug DBG]  [-sigma s]
  
Input: 
  -i_TYPE S: Unit sphere, isotopic to the surface domain over which the 
                    data to be decomposed is defined.
                    This surface is used to calculate the basis functions 
                    up to order L.
                    These basis functions are saved under 
                    the prefix BASES_PREFIX.
                    Note that this surface does not need to be of 
                    radius 1. 
  -unit_sph UNIT_SPH_LABEL: Provide the label of the unit sphere. 
                   If you do not do that, the program won't know 
                   which of the two -i_TYPE options specifies the 
                   unit sphere.
  -l L: Decomposition order
  One of:
     -i_TYPE SD: A surface that is isotopic to S and whose node coordinates 
                 provide three data vectors (X, Y, Z) to be decomposed
                 See help section on surface input to understand the
                 syntax of -i_TYPE
                 You can specify multiple surfaces to be processed by 
                 using repeated instances of -i_TYPE SD option. This is more
                 computationally efficient than doing each surface separately.    or 
     -data D: A dataset whose K columns are to be individually decomposed. 

  -bases_prefix BASES_PREFIX: If -unit_sph is used, this option save the
                              bases functions under the prefix BASES_PREFIX
                              Otherwise, if BASES_PREFIX exists on disk, the
                              program will reload them. This is intended to
                              speed up the program, however, in practice, 
                              this may not be the case.
                           Note that the bases are not reusable with a
                              different unit sphere. 
  -debug DBG: Debug levels (1-3)
  -sigma s: Smoothing parameter (0 .. 0.001) which weighs down the 
            contribution of higher order harmonics.
  -prefix PREFIX: Write out the reconstructed data into dataset PREFIX
                  and write the beta coefficients for each processed 
                  data column. Note that when you are using node 
                  coordinates form J surfaces, the output will be for 
                  3*J columns with the 1st triplet of columns for the first 
                  surface's X Y Z coordinates and the 2nd triplet for the
                  second surface's coordinates, etc.
  -o_TYPE SDR: Write out a new surface with reconstructed coordinates.
               This option is only valid if -i_TYPE SD is used.
               See help section on surface output to understand the
               syntax of -o_TYPE.
               If you specify multiple (M) SD surfaces, you will get M
               reconstructed surfaces out. They can be named in one of
               two ways depending on how many -o_TYPE options you use.
               If only one -o_TYPE is used, then M names are automatically
               generated by appending .sXX to SDR. Alternately, you can 
               name all the output surfaces by using M -o_TYPE options.

Output files:
  Harmonics of each order l are stored in a separate
     file with the order l in its name. For example for l = 3, the harmonics
     are stored in a file called  BASES_PREFIX.sph03.1D.
     In the simplest form, this file is in .1D format and contains an
     (l+1 x N) complex matrix. The real part constitutes the negative degree
     harmonics and the positive part contains the postive degree ones.
     (Internally, the complex matrix is turned into a real matrix of size 
      2l+1 x N )
  Beta coefficients are stored in one for each of the input K data columns.
     For example the beta coefficients for the data column 2 is called: 
     PREFIX.beta.col002.1D.dset. 
     The (l+1 x 2l+1) matrix in each file in real valued with each row 
     containing coefficients that for order l.
  Surface or data reconstruction files are named based on PREFIX. 

This program is based on Moo Chung's matlab implementation of spherical
  harmonics decomposition which is presented in: 
  Chung, M.K., Dalton, K.M., Shen, L., L., Evans, A.C., Davidson, R.J. 2006. 
  Unified cortical surface morphometry and its application to quantifying
  amount of gray matter. 
  Technical Report 1122. 
  Department of Statistics, University of Wisconsin-Madison.
  http://www.stat.wisc.edu/~mchung/papers/TR1122.2006.pdf 

-------------------------------------------
 For examples, see script @Spharm.examples  
-------------------------------------------

 Specifying input surfaces using -i or -i_TYPE options: 
    -i_TYPE inSurf specifies the input surface,
            TYPE is one of the following:
       fs: FreeSurfer surface. 
           If surface name has .asc it is assumed to be
           in ASCII format. Otherwise it is assumed to be
           in BINARY_BE (Big Endian) format.
           Patches in Binary format cannot be read at the moment.
       sf: SureFit surface. 
           You must specify the .coord followed by the .topo file.
       vec (or 1D): Simple ascii matrix format. 
            You must specify the coord (NodeList) file followed by 
            the topo (FaceSetList) file.
            coord contains 3 floats per line, representing 
            X Y Z vertex coordinates.
            topo contains 3 ints per line, representing 
            v1 v2 v3 triangle vertices.
       ply: PLY format, ascii or binary.
            Only vertex and triangulation info is preserved.
       mni: MNI .obj format, ascii only.
            Only vertex, triangulation, and node normals info is preserved.
       byu: BYU format, ascii.
            Polygons with more than 3 edges are turned into
            triangles.
       bv: BrainVoyager format. 
           Only vertex and triangulation info is preserved.
       dx: OpenDX ascii mesh format.
           Only vertex and triangulation info is preserved.
           Requires presence of 3 objects, the one of class 
           'field' should contain 2 components 'positions'
           and 'connections' that point to the two objects
           containing node coordinates and topology, respectively.
       gii: GIFTI XML surface format.
 Note that if the surface filename has the proper extension, 
 it is enough to use the -i option and let the programs guess
 the type from the extension.
 Specifying a surface specification (spec) file:
    -spec SPEC: specify the name of the SPEC file.
 Specifying output surfaces using -o or -o_TYPE options: 
    -o_TYPE outSurf specifies the output surface, 
            TYPE is one of the following:
       fs: FreeSurfer ascii surface. 
       fsp: FeeSurfer ascii patch surface. 
            In addition to outSurf, you need to specify
            the name of the parent surface for the patch.
            using the -ipar_TYPE option.
            This option is only for ConvertSurface 
       sf: SureFit surface. 
           For most programs, you are expected to specify prefix:
           i.e. -o_sf brain. In some programs, you are allowed to 
           specify both .coord and .topo file names: 
           i.e. -o_sf XYZ.coord TRI.topo
           The program will determine your choice by examining 
           the first character of the second parameter following
           -o_sf. If that character is a '-' then you have supplied
           a prefix and the program will generate the coord and topo names.
       vec (or 1D): Simple ascii matrix format. 
            For most programs, you are expected to specify prefix:
            i.e. -o_1D brain. In some programs, you are allowed to 
            specify both coord and topo file names: 
            i.e. -o_1D brain.1D.coord brain.1D.topo
            coord contains 3 floats per line, representing 
            X Y Z vertex coordinates.
            topo contains 3 ints per line, representing 
            v1 v2 v3 triangle vertices.
       ply: PLY format, ascii or binary.
       byu: BYU format, ascii or binary.
       mni: MNI obj format, ascii only.
       gii: GIFTI format, ascii.
            You can also enforce the encoding of data arrays
            by using gii_asc, gii_b64, or gii_b64gz for 
            ASCII, Base64, or Base64 Gzipped. 
            If AFNI_NIML_TEXT_DATA environment variable is set to YES, the
            the default encoding is ASCII, otherwise it is Base64.
 Note that if the surface filename has the proper extension, 
 it is enough to use the -o option and let the programs guess
 the type from the extension.

  SUMA communication options:
      -talk_suma: Send progress with each iteration to SUMA.
      -refresh_rate rps: Maximum number of updates to SUMA per second.
                         The default is the maximum speed.
      -send_kth kth: Send the kth element to SUMA (default is 1).
                     This allows you to cut down on the number of elements
                     being sent to SUMA.
      -sh <SumaHost>: Name (or IP address) of the computer running SUMA.
                      This parameter is optional, the default is 127.0.0.1 
      -ni_text: Use NI_TEXT_MODE for data transmission.
      -ni_binary: Use NI_BINARY_MODE for data transmission.
                  (default is ni_binary).
      -feed_afni: Send updates to AFNI via SUMA's talk.
   -np PORT_OFFSET: Provide a port offset to allow multiple instances of
                    AFNI <--> SUMA, AFNI <--> 3dGroupIncorr, or any other
                    programs that communicate together to operate on the same
                    machine. 
                    All ports are assigned numbers relative to PORT_OFFSET.
         The same PORT_OFFSET value must be used on all programs
           that are to talk together. PORT_OFFSET is an integer in
           the inclusive range [1025 to 65500]. 
         When you want to use multiple instances of communicating programs, 
           be sure the PORT_OFFSETS you use differ by about 50 or you may
           still have port conflicts. A BETTER approach is to use -npb below.
   -npq PORT_OFFSET: Like -np, but more quiet in the face of adversity.
   -npb PORT_OFFSET_BLOC: Simliar to -np, except it is easier to use.
                          PORT_OFFSET_BLOC is an integer between 0 and
                          MAX_BLOC. MAX_BLOC is around 4000 for now, but
                          it might decrease as we use up more ports in AFNI.
                          You should be safe for the next 10 years if you 
                          stay under 2000.
                          Using this function reduces your chances of causing
                          port conflicts.

         See also afni and suma options: -list_ports and -port_number for 
            information about port number assignments.

         You can also provide a port offset with the environment variable
            AFNI_PORT_OFFSET. Using -np overrides AFNI_PORT_OFFSET.

   -max_port_bloc: Print the current value of MAX_BLOC and exit.
                   Remember this value can get smaller with future releases.
                   Stay under 2000.
   -max_port_bloc_quiet: Spit MAX_BLOC value only and exit.
   -num_assigned_ports: Print the number of assigned ports used by AFNI 
                        then quit.
   -num_assigned_ports_quiet: Do it quietly.

     Port Handling Examples:
     -----------------------
         Say you want to run three instances of AFNI <--> SUMA.
         For the first you just do: 
            suma -niml -spec ... -sv ...  &
            afni -niWARNING: ***Previous string trunctated because of its length. ***
   [-novolreg|-noxform]: Ignore any Rotate, Volreg, Tagalign, 
                or WarpDrive transformations present in 
                the Surface Volume.
  Common Debugging Options:
   [-trace]: Turns on In/Out debug and Memory tracing.
             For speeding up the tracing log, I recommend 
             you redirect stdout to a file when using this option.
             For example, if you were running suma you would use:
             suma -spec lh.spec -sv ... > TraceFile
             This option replaces the old -iodbg and -memdbg.
   [-TRACE]: Turns on extreme tracing.
   [-nomall]: Turn off memory tracing.
   [-yesmall]: Turn on memory tracing (default).
  NOTE: For programs that output results to stdout
    (that is to your shell/screen), the debugging info
    might get mixed up with your results.
 

++ SUMA version 2006_7_3

CVS tag:
   SUMA_2005_04_29_1733

Compile Date:
   Jul  5 2011

       Ziad S. Saad SSCC/NIMH/NIH ziad@nih.gov     
