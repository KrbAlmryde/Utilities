#!/usr/bin/env tcsh
echo "auto-generated by afni_proc.py, Mon Jun 30 11:23:00 2008"
echo "(version 1.28, Jan 28, 2008)"

# execute via : tcsh -x S#-run-script |& tee output.S#-run-script

# --------------------------------------------------
# script setup

# the user may specify a single subject to run with

set images_home = /LocalImages

if ( $#argv > 0 ) then  
    set subj = $argv[1] 
else                    
#set subj = S1      
set subj = $1      

endif

# set type
set type = $2

# set Base Number
set base = $3

# assign output directory name
set output_dir = ${subj}_${type}_results

# verify that the results directory does not yet exist
if ( -d $output_dir ) then 
    echo output dir "${subj}_${type}_results" already exists

    exit

endif


# create results directory
mkdir $output_dir

# create stimuli directory, and copy stim files
mkdir $output_dir/stimuli

cp mf_memory.1D.txt ff_memory.1D.txt nf_memory.1D.txt \
    na_memory.1D.txt ma_memory.1D.txt fa_memory.1D.txt  \
    null_memory.1D.txt $output_dir/stimuli


# move Anatomical fse files to prep for warping to Talairach space

cp *fse_AUTO+tlrc* $images_home/attnmem/AnovaData/PreAnova


echo "Living Easy"


# -------------------------------------------------------
# apply 3dTcat to copy input dsets to results dir, while
# remove TRs for both memory runs then concatenate in the
# order of mem2 and mem1 respectively
#Then remove 0 TRs from concatenated data

3dTcat -prefix $output_dir/${subj}_mem1_tcat ${subj}-mem1-epan+orig'[7..234]'

3dTcat -prefix $output_dir/${subj}_mem2_tcat ${subj}-mem2-epan+orig'[8..221]'

# and enter the results directory
cd $output_dir

3dTcat -prefix ${subj}_${type}_tcat ${subj}_mem2_tcat+orig ${subj}_mem1_tcat+orig

echo "Loving Free!"

# -------------------------------------------------------
# run 3dToutcount and 3dTshift for BRIK and HEAD File

3dToutcount -automask ${subj}_${type}_tcat+orig > precount_${subj}_${type}.1D

1dplot -one  precount_${subj}_${type}.1D

3dDespike -prefix ${subj}_${type}_despike -ssave ${subj}_${type}_spike ${subj}_${type}_tcat+orig

3dTshift -tzero 0 -rlt+ -quintic -prefix ${subj}_${type}_tshift      \
             ${subj}_${type}_despike+orig

3dToutcount -automask ${subj}_${type}_tshift+orig > postcount_${subj}_${type}.1D

1dplot -one postcount_${subj}_${type}.1D

echo "Season ticket on a one-way ride"

# -------------------------------------------------------
# align each dset to the base volume

    3dvolreg -verbose -zpad 1 -base ${subj}_${type}_tshift+orig"[${base}]"  \
             -1Dfile dfile-$type.1D -prefix ${subj}_${type}_volreg  \
             -cubic                                                  \
             ${subj}_${type}_tshift+orig


# make a single file of registration params
cat dfile-$type.1D > dfile-$type.1D

echo "Asking nothing, leave me be!"

# -------------------------------------------------------
# blur each volume

    3dmerge -1blur_fwhm 8.0 -doall -prefix ${subj}_${type}_blur   \
            ${subj}_${type}_volreg+orig

echo "Taking everything in my stride!"

# -------------------------------------------------------
# create 'full_mask' dataset (union mask)

    3dAutomask -prefix ${subj}_${type}_automask ${subj}_${type}_blur+orig

echo "Dont need reason, dont need rhyme"

# -------------------------------------------------------
# norm each voxel time series to have a mean of 100
# (subject to maximum value of 200)

    3dTstat -prefix ${subj}_${type}_mean ${subj}_${type}_blur+orig
    3dcalc -a ${subj}_${type}_blur+orig -b ${subj}_${type}_mean+orig  \
           -c ${subj}_${type}_automask+orig                              \
           -expr 'c * min(200, a/b*100)'                        \
           -prefix ${subj}_${type}_norm

echo "Aint nothing I would rather do"

# -------------------------------------------------------
# run the regression analysis
3dDeconvolve -input ${subj}_${type}_norm+orig.HEAD                     \
    -polort 7                                                          \
    -mask ${subj}_${type}_automask+orig                                         \
    -num_stimts 7                                                     \
    -stim_times 1 stimuli/mf_memory.1D.txt 'GAM'                   \
    -stim_label 1 mf_memory                                        \
    -stim_times 2 stimuli/ff_memory.1D.txt 'GAM'                  \
    -stim_label 2 ff_memory                                       \
    -stim_times 3 stimuli/nf_memory.1D.txt 'GAM'                  \
    -stim_label 3 nf_memory                                       \
    -stim_times 4 stimuli/na_memory.1D.txt 'GAM'                   \
    -stim_label 4 na_memory                                        \
    -stim_times 5 stimuli/ma_memory.1D.txt 'GAM'                   \
    -stim_label 5 ma_memory                                        \
    -stim_times 6 stimuli/fa_memory.1D.txt 'GAM'                   \
    -stim_label 6 fa_memory                                        \
    -stim_times 7 stimuli/null_memory.1D.txt 'GAM'                   \
    -stim_label 7 null_word_res                                        \
#   -stim_file 8 dfile.$type.1D'[0]' -stim_base 8 -stim_label 8 roll    \
#   -stim_file 9 dfile.$type.1D'[1]' -stim_base 9 -stim_label 9 pitch   \
#   -stim_file 10 dfile.$type.1D'[2]' -stim_base 10 -stim_label 10 yaw  \
#   -stim_file 11 dfile.$type.1D'[3]' -stim_base 11 -stim_label 11 dS   \
#   -stim_file 12 dfile.$type.1D'[4]' -stim_base 12 -stim_label 12 dL   \
#   -stim_file 13 dfile.$type.1D'[5]' -stim_base 13 -stim_label 13 dP   \
   -iresp 1 ${subj}_${type}_mf-norm-irf -TR_times 1.15 \
   -iresp 2 ${subj}_${type}_ff-norm-irf -TR_times 1.15 \
   -iresp 3 ${subj}_${type}_nf-norm-irf -TR_times 1.15 \
   -iresp 4 ${subj}_${type}_na-norm-irf -TR_times 1.15 \
   -iresp 5 ${subj}_${type}_ma-norm-irf -TR_times 1.15 \
   -iresp 6 ${subj}_${type}_fa-norm-irf -TR_times 1.15 \
   -iresp 7 ${subj}_${type}_null-norm-irf -TR_times 1.15 \
   -num_glt 6	\
   -glt_label 1 mf_vs_null	\
   -gltsym 'SYM: +mf_memory -null_word_res'	\
   -glt_label 2 fa_vs_null	\
   -gltsym 'SYM: +fa_memory -null_word_res'	\
   -glt_label 3 na_vs_null	\
   -gltsym 'SYM: +na_memory -null_word_res'	\
   -glt_label 4 ma_vs_null	\
   -gltsym 'SYM: +ma_memory -null_word_res'	\
   -glt_label 5 ff_vs_null	\
   -gltsym 'SYM: +ff_memory -null_word_res'	\
   -glt_label 6 nf_vs_null	\
   -gltsym 'SYM: +nf_memory -null_word_res'	\
   -fout -tout -x1D X.xmat.1D -xjpeg X.jpg                            \
    -fitts ${subj}_${type}_fitts                                                \
    -bucket ${subj}_${type}_stats

# create an all_runs dataset to match the fitts, errts, etc.
3dTcat -prefix all_runs$subj ${subj}_${type}_norm+orig.HEAD

# create ideal files for each stim type
1dcat X.xmat.1D'[6]' > ideal_mf_memory.1D
1dcat X.xmat.1D'[7]' > ideal_ff_memory.1D
1dcat X.xmat.1D'[8]' > ideal_nf_memory.1D
1dcat X.xmat.1D'[9]' > ideal_na_memory.1D
1dcat X.xmat.1D'[10]' > ideal_ma_memory.1D
1dcat X.xmat.1D'[11]' > ideal_fa_memory.1D
1dcat X.xmat.1D'[12]' > ideal_null_memory.1D

echo "Going down, Party Time!" 

# -------------------------------------------------------

# Extract sub-brick data

3dbucket -prefix ${subj}_${type}_null-tstat-script -fbuc ${subj}_${type}_stats+orig'[20]'

3dbucket -prefix ${subj}_${type}_mf-tstat-script -fbuc ${subj}_${type}_stats+orig'[23]'

3dbucket -prefix ${subj}_${type}_fa-tstat-script -fbuc ${subj}_${type}_stats+orig'[26]'

3dbucket -prefix ${subj}_${type}_na-tstat-script -fbuc ${subj}_${type}_stats+orig'[29]'

3dbucket -prefix ${subj}_${type}_ma-tstat-script -fbuc ${subj}_${type}_stats+orig'[32]'

3dbucket -prefix ${subj}_${type}_ff-tstat-script -fbuc ${subj}_${type}_stats+orig'[35]'

3dbucket -prefix ${subj}_${type}_nf-tstat-script -fbuc ${subj}_${type}_stats+orig'[38]'

mv *tstat* $images_home/attnmem/AnovaData/PreAnova

mv *irf* $images_home/attnmem/AnovaData/PreAnova

echo "My friends are gonna be there too!"

# -------------------------------------------------------
# return to parent directory
cd ../../${subj}

# -------------------------------------------------------
# Change directories to PreAnova, Warp sub-bricked Tstat files to Talairach space
cd ../AnovaData/PreAnova

adwarp -apar ${subj}_fse_AUTO+tlrc -dpar ${subj}_${type}_null-norm-irf+orig

adwarp -apar ${subj}_fse_AUTO+tlrc -dpar ${subj}_${type}_mf-norm-irf+orig

adwarp -apar ${subj}_fse_AUTO+tlrc -dpar ${subj}_${type}_ff-norm-irf+orig

adwarp -apar ${subj}_fse_AUTO+tlrc -dpar ${subj}_${type}_nf-norm-irf+orig

adwarp -apar ${subj}_fse_AUTO+tlrc -dpar ${subj}_${type}_na-norm-irf+orig

adwarp -apar ${subj}_fse_AUTO+tlrc -dpar ${subj}_${type}_ma-norm-irf+orig

adwarp -apar ${subj}_fse_AUTO+tlrc -dpar ${subj}_${type}_fa-norm-irf+orig

adwarp -apar ${subj}_fse_AUTO+tlrc -dpar ${subj}_${type}_mf-tstat-script+orig

adwarp -apar ${subj}_fse_AUTO+tlrc -dpar ${subj}_${type}_ff-tstat-script+orig

adwarp -apar ${subj}_fse_AUTO+tlrc -dpar ${subj}_${type}_nf-tstat-script+orig

adwarp -apar ${subj}_fse_AUTO+tlrc -dpar ${subj}_${type}_na-tstat-script+orig

adwarp -apar ${subj}_fse_AUTO+tlrc -dpar ${subj}_${type}_ma-tstat-script+orig

adwarp -apar ${subj}_fse_AUTO+tlrc -dpar ${subj}_${type}_fa-tstat-script+orig


# -------------------------------------------------------

echo "Dont Stop Me!"

end