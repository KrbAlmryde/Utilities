#!/usr/bin/env tcsh
echo "auto-generated by afni_proc.py, Mon Jun 30 11:23:00 2008"
echo "(version 1.28, Jan 28, 2008)"

# execute via : tcsh -x S#-run-script |& tee output.S#-run-script

# --------------------------------------------------
# script setup

# the user may specify a single subject to run with

set images_home = /LocalImages

if ( $#argv > 0 ) then  
    set subj = $argv[1] 
else                    
#    set subj = S20      
    set subj = $1      

endif

# set run
# set run = $run
set run = $2

# set Base Number
set base = $3

# assign output directory name
set output_dir = ${subj}_${run}_results

# verify that the results directory does not yet exist
if ( -d $output_dir ) then 
    echo output dir "${subj}_${run}_results" already exists

    exit


endif

# create results directory
mkdir $output_dir


# create stimuli directory, and copy stim files
mkdir $output_dir/stimuli
cp S20_word_mvfw_res.1D.txt S20_word_fvmw_res.1D.txt S20_word_mvmw_res.1D.txt \
    S20_word_mvnw_res.1D.txt S20_word_fvnw_res.1D.txt S20_word_fvfw_res.1D.txt \
    S20_word_null_res.1D.txt $output_dir/stimuli

# -------------------------------------------------------
# apply 3dTcat to copy input dsets to results dir, while
# removing the first 4 TRs
3dTcat -prefix $output_dir/${subj}_${run}_tcat ${subj}_${run}_epan+orig'[4..$]'

# and enter the results directory
cd $output_dir

# -------------------------------------------------------
# run 3dToutcount and 3dTshift for BRIK and HEAD File

3dToutcount -automask ${subj}_${run}_tcat+orig > precount_${subj}_${run}.1D

1dplot -one  precount_${subj}_${run}.1D

3dDespike -prefix ${subj}_${run}_despike -ssave ${subj}_${run}_spike ${subj}_${run}_tcat+orig

3dTshift -tzero 0 -rlt+ -quintic -prefix ${subj}_${run}_tshift      \
             ${subj}_${run}_despike+orig

3dToutcount -automask ${subj}_${run}_tshift+orig > postcount_${subj}_${run}.1D

1dplot -one postcount_${subj}_${run}.1D

# -------------------------------------------------------
# align each dset to the base volume

    3dvolreg -verbose -zpad 1 -base ${subj}_${run}_tshift+orig"[${base}]"  \
             -1Dfile dfile_${subj}_${run}_1D -prefix ${subj}_${run}_volreg  \
             -cubic                                                  \
             ${subj}_${run}_tshift+orig


# make a single file of registration params
cat dfile_${subj}_${run}_1D > ${subj}_${run}_1D

# -------------------------------------------------------
# blur each volume

    3dmerge -1blur_fwhm 8.0 -doall -prefix ${subj}_${run}_blur   \
            ${subj}_${run}_volreg+orig


# -------------------------------------------------------
# create 'full_mask' dataset (union mask)

    3dAutomask -prefix ${subj}_${run}_automask ${subj}_${run}_blur+orig

# -------------------------------------------------------
# resample the fse to allow for edits within afni
	
#	3dresample -master ${subj}_${run}_automask+orig -prefix $subj-fse-edit \
#		-inset $subj-fse+orig -rmode NN

#afni


# -------------------------------------------------------

# scale each voxel time series to have a mean of 100
# (subject to maximum value of 200)

    3dTstat -prefix ${subj}_${run}_mean ${subj}_${run}_blur+orig
    3dcalc -a ${subj}_${run}_blur+orig -b ${subj}_${run}_mean+orig  \
           -c ${subj}_${run}_automask+orig                              \
           -expr 'c * min(200, a/b*100)'                        \
           -prefix ${subj}_${run}_norm

# -------------------------------------------------------
# run the regression analysis
3dDeconvolve -input ${subj}_${run}_norm+orig.HEAD                     \
    -polort 5                                                          \
    -mask ${subj}_${run}_automask+orig                                        \
    -num_stimts 7                                                     \
   -stim_times 1 stimuli/S20_word_mvfw_res.1D.txt 'GAM'                  \
   -stim_label 1 S20_word_mvfw_res                                       \
   -stim_times 2 stimuli/S20_word_fvmw_res.1D.txt 'GAM'                  \
   -stim_label 2 S20_word_fvmw_res                                       \
   -stim_times 3 stimuli/S20_word_mvmw_res.1D.txt 'GAM'                  \
   -stim_label 3 S20_word_mvmw_res                                       \
   -stim_times 4 stimuli/S20_word_mvnw_res.1D.txt 'GAM'                  \
   -stim_label 4 S20_word_mvnw_res                                       \
   -stim_times 5 stimuli/S20_word_fvnw_res.1D.txt 'GAM'                 \
   -stim_label 5 S20_word_fvnw_res                                      \
   -stim_times 6 stimuli/S20_word_fvfw_res.1D.txt 'GAM'                 \
   -stim_label 6 S20_word_fvfw_res                                      \
   -stim_times 7 stimuli/S20_word_null_res.1D.txt 'GAM'                  \
   -stim_label 7 S20_word_null_res                                       \
#    -stim_file 8 dfile.$run.1D'[0]' -stim_base 8 -stim_label 8 roll    \
#    -stim_file 9 dfile.$run.1D'[1]' -stim_base 9 -stim_label 9 pitch   \
#    -stim_file 10 dfile.$run.1D'[2]' -stim_base 10 -stim_label 10 yaw  \
#   -stim_file 11 dfile.$run.1D'[3]' -stim_base 11 -stim_label 11 dS   \
#   -stim_file 12 dfile.$run.1D'[4]' -stim_base 12 -stim_label 12 dL   \
#   -stim_file 13 dfile.$run.1D'[5]' -stim_base 13 -stim_label 13 dP   \
   -iresp 1 S20_word_mvfw_norm.irf \
   -iresp 2 S20_word_fvmw_norm.irf \
   -iresp 3 S20_word_mvmw_norm.irf \
   -iresp 4 S20_word_mvnw_norm.irf \
   -iresp 5 S20_word_fvnw_norm.irf \
   -iresp 6 S20_word_fvfw_norm.irf \
   -iresp 7 S20_word_null_norm.irf \
   -num_glt 6	\
   -glt_label 1 mvfw_vs_null	\
   -gltsym 'SYM: +S20_word_mvfw_res -S20_word_null_res'	\
   -glt_label 2 fvmw_vs_null	\
   -gltsym 'SYM: +S20_word_fvmw_res -S20_word_null_res'	\
   -glt_label 3 mvmw_vs_null	\
   -gltsym 'SYM: +S20_word_mvmw_res -S20_word_null_res'	\
   -glt_label 4 mvmw_vs_null	\
   -gltsym 'SYM: +S20_word_fvnw_res -S20_word_null_res'	\
   -glt_label 5 fvnw_vs_null	\
   -gltsym 'SYM: +S20_word_fvfw_res -S20_word_null_res'	\
   -glt_label 6 fvfw_vs_null	\
   -gltsym 'SYM: +S20_word_fvfw_res -S20_word_null_res'	\
   -fout -tout -x1D X.xmat.1D -xjpeg X.jpg                            \
   -fitts ${subj}_${run}_fitts                                                \
   -bucket ${subj}_${run}_stats


# create an all_runs dataset to match the fitts, errts, etc.
3dTcat -prefix ${subj}_${run}_all_runs ${subj}_${run}_norm+orig.HEAD

# create ideal files for each stim run
1dcat X.xmat.1D'[6]' > ideal_mvfw-word-res.1D
1dcat X.xmat.1D'[7]' > ideal_fvmw-word-res.1D
1dcat X.xmat.1D'[8]' > ideal_mvmw-word-res.1D
1dcat X.xmat.1D'[9]' > ideal_mvnw-word-res.1D
1dcat X.xmat.1D'[10]' > ideal_fvnw-word-res.1D
1dcat X.xmat.1D'[11]' > ideal_fvfw-word-res.1D
1dcat X.xmat.1D'[12]' > ideal_null-word-res.1D

# -------------------------------------------------------

# remove temporary rm.* files \
# rm -f rm.*

# return to parent directory
cd ..

# move Anatomical SPGR files to prep for warping to Talairach space
cp *spgr* $images_home/stroop/AnovaData/SingleSubjectTSTAT


# Change directories and extract sub-brick data
cd ${subj}_${run}_results

3dbucket -prefix ${subj}_${run}_mvfw-tstat-script -fbuc ${subj}_${run}_stats+orig'[23]'

3dbucket -prefix ${subj}_${run}_fvmw-tstat-script -fbuc ${subj}_${run}_stats+orig'[26]'

3dbucket -prefix ${subj}_${run}_mvmw-tstat-script -fbuc ${subj}_${run}_stats+orig'[29]'

3dbucket -prefix ${subj}_${run}_mvnw-tstat-script -fbuc ${subj}_${run}_stats+orig'[32]'

3dbucket -prefix ${subj}_${run}_fvnw-tstat-script -fbuc ${subj}_${run}_stats+orig'[35]'

3dbucket -prefix ${subj}_${run}_fvfw-tstat-script -fbuc ${subj}_${run}_stats+orig'[38]'

mv *tstat* $images_home/stroop/AnovaData/SingleSubjectTSTAT

# -------------------------------------------------------
# Change directories to SingleSubjectTSTAT, Warp sub-bricked Tstat files to Talairach space 

cd ../..

cd AnovaData/SingleSubjectTSTAT

adwarp -apar ${subj}_spgr+tlrc -dpar ${subj}_${run}_mvfw-tstat-script+orig

adwarp -apar ${subj}_spgr+tlrc -dpar ${subj}_${run}_fvmw-tstat-script+orig

adwarp -apar ${subj}_spgr+tlrc -dpar ${subj}_${run}_mvmw-tstat-script+orig

adwarp -apar ${subj}_spgr+tlrc -dpar ${subj}_${run}_mvnw-tstat-script+orig

adwarp -apar ${subj}_spgr+tlrc -dpar ${subj}_${run}_fvnw-tstat-script+orig

adwarp -apar ${subj}_spgr+tlrc -dpar ${subj}_${run}_fvfw-tstat-script+orig


# -------------------------------------------------------
# return to parent directory
cd ../../${subj}

end
